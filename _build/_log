### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o main.cmi main.mli
# Target: main.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules main.ml > main.ml.depends # cached
# Target: background.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:background.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules background.mli > background.mli.depends # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules gui.mli > gui.mli.depends # cached
# Target: background.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:background.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o background.cmi background.mli
# Target: state.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules state.mli > state.mli.depends # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o player.cmi player.mli
# Target: state.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o state.cmi state.mli
# Target: gui.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o gui.cmi gui.mli
# Target: main.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o main.cmo main.ml
# Target: background.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:background.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules background.ml > background.ml.depends # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules gui.ml > gui.ml.depends # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules player.ml > player.ml.depends # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules state.ml > state.ml.depends # cached
# Target: background.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:background.cmo, file:background.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o background.cmo background.ml
# Target: gui.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o gui.cmo gui.ml
# Target: player.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o player.cmo player.ml
# Target: state.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o state.cmo state.ml
# Target: main.byte, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, debug, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages background.cmo player.cmo state.cmo gui.cmo main.cmo -o main.byte
# Compilation successful.
