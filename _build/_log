### Starting build.
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules gui.mli > gui.mli.depends
# Target: gui.cmi, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -o gui.cmi gui.mli
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules gui.ml > gui.ml.depends
# Target: graphic_image.ml.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:ml, file:graphic_image.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules graphic_image.ml > graphic_image.ml.depends
# Target: graphic_image.cmo, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:graphic_image.cmo, file:graphic_image.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -o graphic_image.cmo graphic_image.ml
# Target: gui.cmo, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -o gui.cmo gui.ml
# Target: command.mli.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules command.mli > command.mli.depends
# Target: command.cmi, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules command.ml > command.ml.depends
# Target: command.cmo, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -o command.cmo command.ml
# Target: state.mli.depends, tags: { package(ANSITerminal), package(camlimages.all_formats), package(graphics), package(ounit2), package(yojson), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules state.mli > state.mli.depends
+ ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.all_formats -modules state.mli > state.mli.depends
File "state.mli", line 2, characters 0-5:
2 | type t
    ^^^^^
Alert deprecated: ISO-Latin1 characters in identifiers
File "state.mli", line 2, characters 0-5:
2 | type t
    ^^^^^
Error: Syntax error
Command exited with code 2.
# Compilation unsuccessful.
