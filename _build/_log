### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules main.ml > main.ml.depends # cached
# Target: background.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:background.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules background.mli > background.mli.depends # cached
# Target: background.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:background.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o background.cmi background.mli # cached
# Target: bomb.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:bomb.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules bomb.mli > bomb.mli.depends # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o player.cmi player.mli # cached
# Target: bomb.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:bomb.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o bomb.cmi bomb.mli # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules gui.mli > gui.mli.depends # cached
# Target: state.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules state.mli > state.mli.depends # cached
# Target: toolAddBomb.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:toolAddBomb.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolAddBomb.mli > toolAddBomb.mli.depends # cached
# Target: toolAddBomb.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:toolAddBomb.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolAddBomb.cmi toolAddBomb.mli # cached
# Target: toolAddHeart.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:toolAddHeart.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolAddHeart.mli > toolAddHeart.mli.depends # cached
# Target: toolAddHeart.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:toolAddHeart.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolAddHeart.cmi toolAddHeart.mli # cached
# Target: toolSpeedUp.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:toolSpeedUp.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolSpeedUp.mli > toolSpeedUp.mli.depends # cached
# Target: toolSpeedUp.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:toolSpeedUp.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolSpeedUp.cmi toolSpeedUp.mli # cached
# Target: toolTwoBomb.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:toolTwoBomb.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolTwoBomb.mli > toolTwoBomb.mli.depends # cached
# Target: toolTwoBomb.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:toolTwoBomb.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolTwoBomb.cmi toolTwoBomb.mli # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o state.cmi state.mli # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o gui.cmi gui.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o main.cmo main.ml # cached
# Target: background.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:background.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules background.ml > background.ml.depends # cached
# Target: background.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:background.cmo, file:background.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o background.cmo background.ml # cached
# Target: bomb.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:bomb.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules bomb.ml > bomb.ml.depends # cached
# Target: bomb.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:bomb.cmo, file:bomb.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o bomb.cmo bomb.ml # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o gui.cmo gui.ml # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o player.cmo player.ml # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules state.ml > state.ml.depends # cached
# Target: enemy.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:enemy.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules enemy.mli > enemy.mli.depends # cached
# Target: enemy.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:enemy.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o enemy.cmi enemy.mli # cached
# Target: obsPortal.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:mli, file:obsPortal.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules obsPortal.mli > obsPortal.mli.depends # cached
# Target: obsPortal.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:obsPortal.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o obsPortal.cmi obsPortal.mli # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o state.cmo state.ml # cached
# Target: toolAddHeart.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:toolAddHeart.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolAddHeart.ml > toolAddHeart.ml.depends # cached
# Target: toolAddHeart.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:toolAddHeart.cmo, file:toolAddHeart.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolAddHeart.cmo toolAddHeart.ml # cached
# Target: toolSpeedUp.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:toolSpeedUp.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolSpeedUp.ml > toolSpeedUp.ml.depends # cached
# Target: toolSpeedUp.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:toolSpeedUp.cmo, file:toolSpeedUp.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolSpeedUp.cmo toolSpeedUp.ml # cached
# Target: toolAddBomb.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:toolAddBomb.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolAddBomb.ml > toolAddBomb.ml.depends # cached
# Target: toolAddBomb.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:toolAddBomb.cmo, file:toolAddBomb.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolAddBomb.cmo toolAddBomb.ml # cached
# Target: toolTwoBomb.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:toolTwoBomb.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules toolTwoBomb.ml > toolTwoBomb.ml.depends # cached
# Target: toolTwoBomb.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:toolTwoBomb.cmo, file:toolTwoBomb.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o toolTwoBomb.cmo toolTwoBomb.ml # cached
# Target: enemy.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:enemy.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules enemy.ml > enemy.ml.depends # cached
# Target: enemy.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:enemy.cmo, file:enemy.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o enemy.cmo enemy.ml # cached
# Target: obsPortal.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), debug, extension:ml, file:obsPortal.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -modules obsPortal.ml > obsPortal.ml.depends # cached
# Target: obsPortal.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:obsPortal.cmo, file:obsPortal.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages -o obsPortal.cmo obsPortal.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(camlimages), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, debug, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages.png -package camlimages background.cmo player.cmo bomb.cmo enemy.cmo obsPortal.cmo toolAddBomb.cmo toolAddHeart.cmo toolSpeedUp.cmo toolTwoBomb.cmo state.cmo gui.cmo main.cmo -o main.byte # cached
# Compilation successful.
